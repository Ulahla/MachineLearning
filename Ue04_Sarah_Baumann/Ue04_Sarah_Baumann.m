# Prevent Octave from thinking that this# is a function file:clear;# Load the nations.csv filecars = dlmread("cars.csv", ",", 1, 1);cylinder = [cars(:,1)];displacement = [cars(:,2)];horsepower = [cars(:,3)];weight = [cars(:,4)];acceleration = [cars(:,5)];year = [cars(:,6)];mpg = [cars(:,7)];# Normalisieren[cylinder_norm] = norm(cylinder);[displacement_norm] = norm(displacement);[horsepower_norm] = norm(horsepower);[weight_norm] = norm(weight);[acceleration_norm] = norm(acceleration);[year_norm] = norm(year);[mpg_norm] = norm(mpg);# Denormalisieren[cylinder_denorm] = denorm(cylinder_norm, cylinder);[displacement_denorm] = denorm(displacement_norm,displacement);[horsepower_denorm] = denorm(horsepower_norm, horsepower);[weight_denorm] = denorm(weight_norm, weight);[acceleration_denorm] = denorm(acceleration_norm, acceleration);[year_denorm] = denorm(year_norm, year);# Thetarand("seed", 7); theta = rand(1, 6);m = 6;iteration = 100;norm = [cylinder_norm displacement_norm horsepower_norm weight_norm acceleration_norm year_norm];mpg_predict = calculatePrediction(norm, theta, 0);mpg_predict_denorm = denorm(mpg_predict, mpg);figure;axis([0,100,1,60])xlabel("iterationen")ylabel("RMSE")hold;x = [1:1:100];# Do the plottingalpha_00005 = 0.0005[rmse_00005, theta_best] = regression (alpha_00005, m, theta, iteration, mpg_predict, mpg_norm, norm, mpg);plot(x,rmse_00005)printf('Best rmse for alpha = %i = %f\n', alpha_00005, min(rmse_00005))alpha_0001 = 0.001[rmse_0001, theta_best] = regression (alpha_0001, m, theta, iteration, mpg_predict, mpg_norm, norm, mpg);plot(x,rmse_0001, "y")printf('Best rmse for alpha = %i = %f\n', alpha_0001, min(rmse_0001))alpha_002 = 0.02[rmse_002, theta_best] = regression (alpha_002, m, theta, iteration, mpg_predict, mpg_norm, norm, mpg);plot(x,rmse_002, "r")printf('Best rmse for alpha = %i = %f\n', alpha_002, min(rmse_002))alpha_004 = 0.04[rmse_004, theta_best] = regression (alpha_004, m, theta, iteration, mpg_predict, mpg_norm, norm, mpg);plot(x,rmse_004, "g")printf('Best rmse for alpha = %i = %f\n', alpha_004, min(rmse_004))legend ({'alpha = 0.0005','alpha = 0.001','alpha = 0.02','alpha = 0.04'});legend left;#regression#diff = [mpg_predict .- mpg_norm];#delta_theta = norm' * diff;#delta_theta_strich = (alpha/m) * delta_theta;#theta_new = theta' - delta_theta_strich