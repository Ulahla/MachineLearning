#function [best_rmse, best_koeff, mpg_best] = (norm, koeff,rmse, mpg, anzahl_koefs, anzahl_Kinder)function [best_rmse, best_koeff, best_mpg] = evolution(norm, rmse, koeff, mpg, anzahl_koefs, anzahl_kinder, iterationen);  best_koeff = koeff;  best_rmse = rmse;  best_mpg = mpg;  for x = 1 : iterationen    #children = []    for i = 1 : anzahl_kinder       for j = 1 : anzahl_koefs        children(1,j) = best_koeff(1,j) + (rand(1,1).-0.5 + 10^-1);        # .+ ((rand(1,6).-0.5) ./ 10);]       endfor    #endfor    #for i = 1 : anzahl_kinder      temp_pred = calculatePrediction(norm, children, 0);      denorm_t_p = denorm(temp_pred, mpg);      temp_rmse = sqrt(sum((denorm_t_p .- mpg).^2)/ length(norm));      if(temp_rmse < best_rmse )        best_koeff = children;        best_rmse = temp_rmse;        best_mpg = denorm_t_p;              endif    endfor    best_rmse;  endforendfunction