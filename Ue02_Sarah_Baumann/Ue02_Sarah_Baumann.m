  # Prevent Octave from thinking that this# is a function file:clear;# Load the nations.csv filenations = dlmread("nations.csv", "," , 1,0);# min und max[gdpPPMinValue gdpPPMinIndex] = min(nations(:,4) ./ nations(:,7));minGDP = [gdpPPMinValue  nations(gdpPPMinIndex,5)];[gdpPPMaxValue gdpPPMaxIndex] = max(nations(:,4) ./ nations(:,7));maxGDP = [gdpPPMaxValue nations(gdpPPMaxIndex,5)];# x = [minGDP(1,1) maxGDP(1,1)];# y = [minGDP(1,2) maxGDP(1,2)];gdpPPMinValue = gdpPPMinValue .*1000000;gdpPPMaxValue = gdpPPMaxValue .*1000000;lifespan = nations(:,5);maxLifespan = max(lifespan);minLifespan = min(lifespan);#plot(gdpPPMaxValue, nations(gdpPPMaxIndex,5), "xr" )#hold;mGdpPPLifespan = [((nations(:,4)./nations(:,7)).*1000000)  nations(:,5) ];figure;plot(mGdpPPLifespan(:,1), nations(:,5), "og");hold;# Beschriften des Grphentitle("Lebenserwartung in Abh√§ngigkeit des Bip pro Kopfes");xlabel("bip pro Kopf");ylabel("Lebensspanne");# 2. Aufgabe# Daten normalisieren# norm = x - min(x) / max(x) - min(x);n = length(mGdpPPLifespan);normX = ((mGdpPPLifespan(:,1) - gdpPPMinValue)) ./ (gdpPPMaxValue - gdpPPMinValue);normY = ((lifespan - minLifespan) ./ (maxLifespan - minLifespan)); [y, rmse] = polynomZweitenGerades(2, normX, lifespan, n); #plot(normX, y, "or")x_denorm = normX .* (gdpPPMaxValue - gdpPPMinValue) + gdpPPMinValue;plot(x_denorm, y, "xr")#rmse = sqrt(sum((y_denorm .- nations(:,5)).^2)/n)